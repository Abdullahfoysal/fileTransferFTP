/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.swe.filetransfer.client;

import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author foysalmac
 */
public class MainClientView extends javax.swing.JFrame {
    String dir,host,port;
    Socket soc;
    transferFileClient transferFileClient;
    

    /**
     * Creates new form MainClientView
     */
    
    public MainClientView() {
        initComponents();
    }
    public MainClientView(String dir,String host,String port) throws Exception {
      this.dir=dir;
      this.host=host;
      this.port=port;
      
      initComponents();
      
     
      
     
      
        try {
            soc = new Socket("127.0.0.1",5217);
        } catch (IOException ex) {
            Logger.getLogger(MainClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
        transferFileClient=new transferFileClient(soc,dir);
        //transferFileClient.displayMenu();
        
        updateList();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    
     DefaultListModel<String> jListLocalModel = new DefaultListModel<>();
     DefaultListModel<String> jListServerModel = new DefaultListModel<>();
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        download = new javax.swing.JButton();
        uploadFromClientDirectory = new javax.swing.JButton();
        choose_fileButton = new javax.swing.JButton();
        selectFileDirectoryTxt = new javax.swing.JTextField();
        jScrollPaneServer = new javax.swing.JScrollPane();
        jListServer = new javax.swing.JList<>();
        jScrollPaneClientLocal = new javax.swing.JScrollPane();
        jListLocal = new javax.swing.JList<>();
        jLabelserver = new javax.swing.JLabel();
        jLabelclient = new javax.swing.JLabel();
        clientApplication = new javax.swing.JLabel();
        localFileNameTxt = new javax.swing.JTextField();
        errorMessage = new javax.swing.JLabel();
        selectFileName = new javax.swing.JLabel();
        serverFileNameTxt = new javax.swing.JTextField();
        selectFileName1 = new javax.swing.JLabel();
        chooseUploadButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        download.setBackground(new java.awt.Color(0, 153, 51));
        download.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        download.setForeground(new java.awt.Color(204, 204, 204));
        download.setText("Download");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        uploadFromClientDirectory.setBackground(new java.awt.Color(255, 51, 51));
        uploadFromClientDirectory.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        uploadFromClientDirectory.setForeground(new java.awt.Color(204, 204, 204));
        uploadFromClientDirectory.setText("Upload");
        uploadFromClientDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFromClientDirectoryActionPerformed(evt);
            }
        });

        choose_fileButton.setBackground(new java.awt.Color(204, 204, 204));
        choose_fileButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        choose_fileButton.setForeground(new java.awt.Color(0, 153, 153));
        choose_fileButton.setText("choose file");
        choose_fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choose_fileButtonActionPerformed(evt);
            }
        });

        selectFileDirectoryTxt.setText("selected file path");
        selectFileDirectoryTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileDirectoryTxtActionPerformed(evt);
            }
        });

        jScrollPaneServer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPaneServer.setForeground(new java.awt.Color(0, 204, 255));
        jScrollPaneServer.setToolTipText("");

        jListServer.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListServerMouseEvent(evt);
            }
        });
        jScrollPaneServer.setViewportView(jListServer);

        jScrollPaneClientLocal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPaneClientLocal.setForeground(new java.awt.Color(0, 204, 255));
        jScrollPaneClientLocal.setToolTipText("");
        jScrollPaneClientLocal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientLocalFilesMouseClick(evt);
            }
        });

        jListLocal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListLocal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistlocalMouseEvent(evt);
            }
        });
        jScrollPaneClientLocal.setViewportView(jListLocal);

        jLabelserver.setFont(new java.awt.Font("Mshtakan", 1, 14)); // NOI18N
        jLabelserver.setText("Server file list");

        jLabelclient.setFont(new java.awt.Font("Mshtakan", 1, 14)); // NOI18N
        jLabelclient.setText("Client file list");

        clientApplication.setBackground(new java.awt.Color(51, 204, 255));
        clientApplication.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        clientApplication.setForeground(new java.awt.Color(0, 0, 204));
        clientApplication.setText("Client Application");

        localFileNameTxt.setText("none");
        localFileNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localFileNameTxtActionPerformed(evt);
            }
        });

        errorMessage.setText("Request Status: ");

        selectFileName.setText("selected file: ");

        serverFileNameTxt.setText("none");
        serverFileNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverFileNameTxtActionPerformed(evt);
            }
        });

        selectFileName1.setText("selected file: ");

        chooseUploadButton.setBackground(new java.awt.Color(255, 51, 51));
        chooseUploadButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        chooseUploadButton.setForeground(new java.awt.Color(204, 204, 204));
        chooseUploadButton.setText("Upload");
        chooseUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseUploadButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(0, 204, 204));
        refreshButton.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(102, 102, 102));
        refreshButton.setText("Refresh Files");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 0, 51));
        deleteButton.setForeground(new java.awt.Color(0, 255, 204));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabelserver)
                .addGap(29, 29, 29)
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabelclient)
                .addGap(110, 110, 110))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorMessage)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneServer, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(selectFileName1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(serverFileNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneClientLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(selectFileName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(localFileNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(download)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(uploadFromClientDirectory)
                                        .addGap(74, 74, 74))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(choose_fileButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(selectFileDirectoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(chooseUploadButton))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(clientApplication)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(clientApplication)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelclient, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelserver)
                        .addComponent(refreshButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneServer, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneClientLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectFileName)
                            .addComponent(localFileNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectFileName1)
                            .addComponent(serverFileNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(download)
                    .addComponent(uploadFromClientDirectory)
                    .addComponent(deleteButton))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choose_fileButton)
                    .addComponent(selectFileDirectoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseUploadButton))
                .addGap(39, 39, 39)
                .addComponent(errorMessage)
                .addGap(131, 131, 131))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
        
        System.out.println("dowload button pressed");
        
         String fileDir= selectFileDirectoryTxt.getText().trim();
         String fileName = serverFileNameTxt.getText().trim();
        try {
             String response= transferFileClient.downloadFile(fileName);
           errorMessage.setText("Request Status: "+ response);
        } catch (Exception ex) {
            Logger.getLogger(MainClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_downloadActionPerformed

    private void uploadFromClientDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFromClientDirectoryActionPerformed
        // TODO add your handling code here:
         System.out.println("Upload button pressed");
        
         String fileName = localFileNameTxt.getText().trim();
        try {
           // transferFileClient.SendFile(fileDir,"h3.png");
           String response= transferFileClient.uploadFile(dir+"/"+fileName);
           errorMessage.setText("Request Status: "+ response);
        } catch (Exception ex) {
            Logger.getLogger(MainClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_uploadFromClientDirectoryActionPerformed

    private void choose_fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choose_fileButtonActionPerformed
        // TODO add yfddour handling code here:
        JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(null);
                File f = chooser.getSelectedFile();
                String fileName= f.getAbsolutePath();
                selectFileDirectoryTxt.setText(fileName);
        
    }//GEN-LAST:event_choose_fileButtonActionPerformed

    private void selectFileDirectoryTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileDirectoryTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectFileDirectoryTxtActionPerformed

    private void localFileNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localFileNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_localFileNameTxtActionPerformed

    private void serverFileNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverFileNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serverFileNameTxtActionPerformed

    private void chooseUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseUploadButtonActionPerformed
        // TODO add your handling code here:
        try {
            String dir = selectFileDirectoryTxt.getText().trim();
           // transferFileClient.SendFile(fileDir,"h3.png");
           String response= transferFileClient.uploadFile(dir);
           errorMessage.setText("Request Status: "+ response);
        } catch (Exception ex) {
            Logger.getLogger(MainClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_chooseUploadButtonActionPerformed

    private void clientLocalFilesMouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientLocalFilesMouseClick
        // TODO add your handling code here:
    }//GEN-LAST:event_clientLocalFilesMouseClick

    private void jlistlocalMouseEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistlocalMouseEvent
        // TODO add your handling code here:
        String selectedItem = (String) jListLocal.getSelectedValue();
        localFileNameTxt.setText(selectedItem);

    }//GEN-LAST:event_jlistlocalMouseEvent

    private void jListServerMouseEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListServerMouseEvent
        // TODO add your handling code here:
         String selectedItem = (String) jListServer.getSelectedValue();
        serverFileNameTxt.setText(selectedItem);
    }//GEN-LAST:event_jListServerMouseEvent

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        updateList();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainClientView().setVisible(true);
            }
        });
    }
    
    public void listFilesForFolder(final File folder) {
          jListLocalModel.clear();
	String temp_names;
		
	   for (final File fileEntry : folder.listFiles()) {
		   if (!fileEntry.isDirectory()) {
			   temp_names = fileEntry.getName();
			  // System.out.println(fileEntry.getName());
                           jListLocalModel.addElement(temp_names);
                           
		   } 
		  
	   }
	   
			
	}
    
    void setServerFiles(String serverFiles ){
         String[] namesList = serverFiles.split("/");
         jListServerModel.clear();
         for(var v: namesList){
             //System.out.println(v);
              jListServerModel.addElement(v);
             
         }
    }
    
    void getServerFiles(){
         try {
            // TODO add your handling code here:

         String serverFiles=transferFileClient.getServerFile();
         setServerFiles(serverFiles);
        
         
        } catch (IOException ex) {
            Logger.getLogger(MainClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void updateList(){
        jListLocal.setModel(jListLocalModel);
        jListServer.setModel(jListServerModel);
        listFilesForFolder(new File(dir));
        getServerFiles();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseUploadButton;
    private javax.swing.JButton choose_fileButton;
    private javax.swing.JLabel clientApplication;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton download;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabelclient;
    private javax.swing.JLabel jLabelserver;
    private javax.swing.JList<String> jListLocal;
    private javax.swing.JList<String> jListServer;
    private javax.swing.JScrollPane jScrollPaneClientLocal;
    private javax.swing.JScrollPane jScrollPaneServer;
    private javax.swing.JTextField localFileNameTxt;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField selectFileDirectoryTxt;
    private javax.swing.JLabel selectFileName;
    private javax.swing.JLabel selectFileName1;
    private javax.swing.JTextField serverFileNameTxt;
    private javax.swing.JButton uploadFromClientDirectory;
    // End of variables declaration//GEN-END:variables
}
